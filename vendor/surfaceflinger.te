# Purpose : Video playback
allow surfaceflinger sw_sync_device:chr_file { rw_file_perms };
allow surfaceflinger debug_prop:property_service set;

# Purpose: Allow to access ged for gralloc_extra functions
allow surfaceflinger proc_ged:file rw_file_perms;
allowxperm surfaceflinger proc_ged:file ioctl { proc_ged_ioctls };

# Purpose : DRM / DRI GPU driver required

allow surfaceflinger gpu_device:dir search;

# Purpose: Fix bootup fail
allow surfaceflinger proc_bootprof:file r_file_perms;

#============= surfaceflinger ==============
allow surfaceflinger debugfs_ion:dir search;

# Purpose: Allow to access cmdq driver
allow surfaceflinger mtk_cmdq_device:chr_file { read ioctl open };

# Perform Binder IPC.
binder_use(surfaceflinger)
binder_call(surfaceflinger, binderservicedomain)
binder_call(surfaceflinger, appdomain)
binder_call(surfaceflinger, mtkbootanimation)
binder_service(surfaceflinger)

allow surfaceflinger mtkbootanimation:dir search;
allow surfaceflinger mtkbootanimation:file { read getattr open };

# Purpose: Allow to access perfmgr
allow surfaceflinger proc_perfmgr:dir {read search};
allow surfaceflinger proc_perfmgr:file {open read ioctl};
allowxperm surfaceflinger proc_perfmgr:file ioctl {
  PERFMGR_FPSGO_QUEUE
  PERFMGR_FPSGO_DEQUEUE
  PERFMGR_FPSGO_QUEUE_CONNECT
  PERFMGR_FPSGO_BQID
  PERFMGR_FPSGO_VSYNC
};

# Purpose: Allow to dump HWC backtrace
get_prop(surfaceflinger, graphics_hwc_pid_prop)
get_prop(surfaceflinger, graphics_hwc_latch_unsignaled_prop)
allow surfaceflinger hal_graphics_composer_default:dir search;
allow surfaceflinger hal_graphics_composer_default:lnk_file read;

# Purpose: Allow to dump buffer queue
get_prop(surfaceflinger, debug_bq_dump_prop)

# Purpose: Allow to access /dev/mdp_device driver
allow surfaceflinger mdp_device:chr_file rw_file_perms;

# Purpose: Allow to access property dev/mdp_sync
#============= surfaceflinger ==============
allow surfaceflinger mtk_mdp_device:chr_file rw_file_perms;

# Purpose: Allow to skip aosp hdr solution
get_prop(surfaceflinger, graphics_hwc_hdr_prop)

# allows surfaceflinger access render files
allow surfaceflinger sysfs_boot_mode:file r_file_perms;
get_prop(surfaceflinger, render_prop)

# for debug purpose
allow surfaceflinger self:capability { net_admin sys_nice };
allow surfaceflinger self:netlink_socket { read bind create };
allow surfaceflinger debug_prop:property_service set;
file_type_auto_trans(surfaceflinger, system_data_file, sf_bqdump_data_file);
allow surfaceflinger anr_data_file:dir { write search create add_name };
allow surfaceflinger anr_data_file:file { create write};
allow surfaceflinger aee_exp_data_file:file write;
allow surfaceflinger aee_dumpsys_data_file:file write;
allow surfaceflinger RT_Monitor_device:chr_file { read ioctl open };

# watch dog use shell to move debug file
allow surfaceflinger shell_exec:file rx_file_perms;

# for using toolbox
allow surfaceflinger system_file:file x_file_perms;

# for sf_dump
userdebug_or_eng(`
allow surfaceflinger sf_bqdump_data_file:{dir file} {relabelto open create read write getattr };
allow surfaceflinger sf_bqdump_data_file:dir {search add_name};
')

# for driver access
allow surfaceflinger sw_sync_device:chr_file { read write open ioctl getattr };
allow surfaceflinger MTK_SMI_device:chr_file { read write open ioctl };

# for bootanimation
allow surfaceflinger bootanim:dir search;
allow surfaceflinger bootanim:file { read getattr open };

# for MTK Emulator HW GPU
allow surfaceflinger qemu_pipe_device:chr_file rw_file_perms;

# for SVP secure memory allocation
allow surfaceflinger proc_secmem:file { read write open ioctl };

# for watchdog
allow surfaceflinger anr_data_file:dir { relabelfrom read remove_name getattr };
allow surfaceflinger anr_data_file:file { rename getattr unlink open append};
allow surfaceflinger sf_rtt_file:dir { create search write add_name remove_name};
allow surfaceflinger sf_rtt_file:file { open read write create rename append getattr unlink};
allow surfaceflinger sf_rtt_file:dir {relabelto getattr};
allow surfaceflinger aee_aed:process sigchld;

# for BufferQueue check process name of em_svr
allow surfaceflinger em_svr:dir search;
allow surfaceflinger em_svr:file { read getattr open };

# need to check what is this allowance for
# TODO:: MTK need to remove later
not_full_treble(`
    allow surfaceflinger mobicore:unix_stream_socket connectto;
')

allow surfaceflinger mobicore_user_device:chr_file { read write ioctl open };

# take down the boot time for bootprof
allow surfaceflinger proc_bootprof:file write;

# notify perf service of SF information for performance
allow surfaceflinger mtk_perf_service:service_manager find;

# allow SF to adjust vsync offset in freemode
allow surfaceflinger debugfs:file getattr;

# GuiExt service
# allow surfaceflinger guiext-server_service:service_manager { add find };

# Add permission for gpu access
allow surfaceflinger dri_device:chr_file { read write open ioctl };

# for rtt dump
allow surfaceflinger toolbox_exec:file rx_file_perms;

# 1. Hwc writes mhl 4k information to debug node of GED
# 2. allow SF to adjust vsync offset in freemode
allow surfaceflinger debugfs_ged:file { open write read getattr};
allow surfaceflinger debugfs_ged:dir { search };

# for FpsPolicyServer
# GL context of each APP will send fps request, so we have loose policy
# FpsPolicyServer control refresh rate through dfrc
allow surfaceflinger fpspolicy-server_service:service_manager add;

# Purpose: Allow to use HAL PQ
hal_client_domain(surfaceflinger, hal_pq)

# Purpose: Allow to use shared memory for HAL PQ
hal_client_domain(surfaceflinger, hal_allocator)

# purpose: Allow to SF communicate with HAL DFPS
hal_client_domain(surfaceflinger, hal_dfps)

# TODO:: MTK need to remove later
#not_full_treble(`
#    allow {domain -init -isolated_app -webview_zygote -hal_configstore_server -vendor_init} fpspolicy-server_service:service_manager find;
#')
allow surfaceflinger mtk_dfrc_device:chr_file rw_file_perms;

# purpose: Allow to SF communicate with HAL GPU
hal_client_domain(surfaceflinger, hal_gpu)

# Purpose: Need to obtain permission to access ged
# for fence monitoring and DVFS
allow surfaceflinger proc_ged:file {open read write ioctl getattr};

get_prop(surfaceflinger, mtk_pq_ro_prop)
get_prop(surfaceflinger, mtk_pq_prop)
get_prop(surfaceflinger, vendor_debug_prop)

# Purpose: Netflix Widevine
allow surfaceflinger teei_client_device:chr_file rw_file_perms;
